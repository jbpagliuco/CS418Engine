#include "engine/LuaManager.h"

#include <LuaBridge.h>
using namespace luabridge;

#include "game/GameObject.h"
#include "components/GameComponent.h"
#include "components/Transform.h"

#include "components/Behaviour.h"
#include "components/ScriptComponent.h"
#include "components/CameraComponent.h"

#include "components/RenderingComponent.h"

#include "util/GameTimer.h"
#include "math/Quaternion.h"

#include "input/InputManager.h"

namespace CS418
{
	LuaManager::~LuaManager()
	{
		if (m_pLuaState)
			lua_close(m_pLuaState);
	}

	void LuaManager::Initialize()
	{
		m_pLuaState = luaL_newstate();
		luaL_openlibs(m_pLuaState);

		registerClasses();
	}

	void LuaManager::ExecuteFile(const std::string &file)
	{
		if (luaL_loadfile(m_pLuaState, file.c_str()))
		{
			printf("Could not open script: %s\n", file.c_str());
			return;
		}

		if (lua_pcall(m_pLuaState, 0, 0, 0))
		{
			printf("Failed to execute script: %s\n", file.c_str());
			return;
		}
	}

	LuaRef LuaManager::GetGlobal(const std::string name)
	{
		return getGlobal(m_pLuaState, name.c_str());
	}

	void LuaManager::registerClasses()
	{
		getGlobalNamespace(m_pLuaState)
			.beginClass<VECTOR2F>("Vector2f")
				.addConstructor<void(*) (F32, F32) >()
				.addData("x", &VECTOR2F::x, true)
				.addData("y", &VECTOR2F::y, true)
			.endClass()
			.beginClass<VECTOR3F>("Vector3f")
				.addConstructor<void(*) (F32, F32, F32) >()
				.addData("x", &VECTOR3F::x, true)
				.addData("y", &VECTOR3F::y, true)
				.addData("z", &VECTOR3F::z, true)
			.endClass()
			.beginClass<VECTOR4F>("Vector4f")
				.addConstructor<void(*) (F32, F32, F32, F32) >()
				.addData("x", &VECTOR4F::x, true)
				.addData("y", &VECTOR4F::y, true)
				.addData("z", &VECTOR4F::z, true)
				.addData("w", &VECTOR4F::w, true)
			.endClass()
			.beginClass<Vector>("Vector")
				.addConstructor<void (*) (void)>()
				.addConstructor<void (*) (F32)>()
				.addConstructor<void (*) (F32, F32, F32, F32)>()
				.addConstructor<void (*) (const Vector &)>()
				.addFunction("ToVector2f", &Vector::asVector2)
				.addFunction("ToVector3f", &Vector::asVector3)
				.addFunction("ToVector4f", &Vector::asVector4)
				.addStaticFunction("FromVector2f", &Lua_V2)
				.addStaticFunction("FromVector3f", &Lua_V3)
				.addStaticFunction("FromVector4f", &Lua_V4)
				.addProperty("x", &Vector::getX)
				.addProperty("y", &Vector::getY)
				.addProperty("z", &Vector::getZ)
				.addProperty("w", &Vector::getW)
				.addFunction("Add", &Vector::operator+)
				.addFunction("Subtract", &Vector::operator-)
				.addFunction("MultiplyScalar", &Vector::Lua_MultScalar)
				.addFunction("AbsoluteValue", &Vector::absoluteValue)
				.addFunction("Negate", &Vector::negate)
				.addFunction("Lerp", &Vector::lerp)
				.addFunction("V2Equals", &Vector::v2equals)
				.addFunction("V2NotEquals", &Vector::v2notEquals)
				.addFunction("V2Less", &Vector::v2less)
				.addFunction("V2LessEq", &Vector::v2lessEq)
				.addFunction("V2Greater", &Vector::v2greater)
				.addFunction("V2GreaterEq", &Vector::v2greaterEq)
				.addFunction("V2Dot", &Vector::v2Dot)
				.addFunction("V2Length", &Vector::v2Length)
				.addFunction("V2LengthSq", &Vector::v2LengthSq)
				.addFunction("V2Normalize", &Vector::v2Normalize)
				.addFunction("V2AngleBetween", &Vector::v2AngleBetween)
				.addFunction("V2AngleBetweenNormals", &Vector::v2AngleBetweenNormals)
				.addFunction("V3Equals", &Vector::v3equals)
				.addFunction("V3NotEquals", &Vector::v3notEquals)
				.addFunction("V3Less", &Vector::v3less)
				.addFunction("V3LessEq", &Vector::v3lessEq)
				.addFunction("V3Greater", &Vector::v3greater)
				.addFunction("V3GreaterEq", &Vector::v3greaterEq)
				.addFunction("V3Dot", &Vector::v3Dot)
				.addFunction("V3Length", &Vector::v3Length)
				.addFunction("V3LengthSq", &Vector::v3LengthSq)
				.addFunction("V3Normalize", &Vector::v3Normalize)
				.addFunction("V3AngleBetween", &Vector::v3AngleBetween)
				.addFunction("V3AngleBetweenNormals", &Vector::v3AngleBetweenNormals)
				.addFunction("V4Equals", &Vector::v4equals)
				.addFunction("V4NotEquals", &Vector::v4notEquals)
				.addFunction("V4Less", &Vector::v4less)
				.addFunction("V4LessEq", &Vector::v4lessEq)
				.addFunction("V4Greater", &Vector::v4greater)
				.addFunction("V4GreaterEq", &Vector::v4greaterEq)
				.addFunction("V4Dot", &Vector::v4Dot)
				.addFunction("V4Length", &Vector::v4Length)
				.addFunction("V4LengthSq", &Vector::v4LengthSq)
				.addFunction("V4Normalize", &Vector::v4Normalize)
				.addFunction("V4AngleBetween", &Vector::v4AngleBetween)
				.addFunction("V4AngleBetweenNormals", &Vector::v4AngleBetweenNormals)
			.endClass();
		
			getGlobalNamespace(m_pLuaState)
				.beginClass<Matrix>("Matrix")
					.addConstructor<void(*) (void)>()
					.addConstructor<void(*) (F32[16])>()
					.addConstructor<void(*) (const Vector &, const Vector &, const Vector &, const Vector &)>()
					.addConstructor<void(*) (const Matrix &)>()
					.addFunction("Equals", &Matrix::equals)
					.addFunction("NotEquals", &Matrix::notEquals)
					.addFunction("Less", &Matrix::less)
					.addFunction("LessEq", &Matrix::lessEq)
					.addFunction("Greater", &Matrix::greater)
					.addFunction("GreaterEq", &Matrix::greaterEq)
					.addFunction("GetElement", &Matrix::operator())
					.addFunction("Add", &Matrix::operator+)
					.addFunction("Subtract", &Matrix::operator-)
					.addFunction("MultiplyMatrix", &Matrix::Lua_MultiplyMatrix)
					.addFunction("MultiplyVector", &Matrix::Lua_MultiplyVector)
					.addFunction("MultiplyScalar", &Matrix::Lua_MultiplyScalar)
					.addFunction("Invert", &Matrix::invert)
					.addFunction("Determinant", &Matrix::determinant)
					.addFunction("Transpose", &Matrix::transpose)
				.endClass()
				.addFunction("MatrixIdentity", &MatrixIdentity)
				.addFunction("MatrixLookAtLH", &MatrixLookAtLH)
				.addFunction("MatrixPerspectiveFOVLH", &MatrixPerspectiveFOVLH)
				.addFunction("MatrixTranslation", &MatrixTranslation)
				.addFunction("MatrixScaling", &MatrixScaling)
				.addFunction("MatrixRotationX", &MatrixRotationX)
				.addFunction("MatrixRotationY", &MatrixRotationY)
				.addFunction("MatrixRotationZ", &MatrixRotationZ)
				.addFunction("MatrixRotationQuaternion", &MatrixRotationQuaternion)
				.addFunction("MatrixRotationEuler", &MatrixRotationEuler);
			
		getGlobalNamespace(m_pLuaState)
			.beginClass<Quaternion>("Quaternion")
				.addConstructor<void (*) (void)>()
				.addConstructor<void (*) (F32, F32, F32, F32)>()
				.addFunction("Invert", &Quaternion::invert)
				.addFunction("MultiplyQuaternion", &Quaternion::Lua_MultiplyQuaternion)
				.addFunction("MultiplyVector", &Quaternion::Lua_MultiplyVector)
				.addFunction("Lerp", &Quaternion::lerp)
				.addFunction("Slerp", &Quaternion::slerp)
				.addProperty("x", &Quaternion::getX)
				.addProperty("y", &Quaternion::getY)
				.addProperty("z", &Quaternion::getZ)
				.addProperty("w", &Quaternion::getW)
				.addStaticFunction("FromEuler", &QuaternionFromEuler)
				.addStaticFunction("FromMatrix", &QuaternionFromMatrix)
				.addFunction("ToEuler", &Quaternion::ToEuler)
			.endClass();

		getGlobalNamespace(m_pLuaState)
			.beginClass<GameComponent>("GameComponent")
			.endClass()
			.beginClass<GameObject>("GameObject")
				.addFunction("AddComponent", &GameObject::AddComponent)
				.addFunction("RemoveComponent", &GameObject::RemoveComponent)
				.addFunction("GetComponents", &GameObject::GetComponents)

				.addFunction("GetRenderingComponents", &GameObject::Lua_GetComponentsOfType<RenderingComponent>)
				.addFunction("GetScriptComponents", &GameObject::Lua_GetComponentsOfType<ScriptComponent>)

				.addProperty("transform", &GameObject::Lua_GetTransform, &GameObject::Lua_SetTransform)
			.endClass()
			.deriveClass<Transform, GameComponent>("Transform")
				.addData("position", &Transform::Position, true)
				.addData("rotation", &Transform::Rotation, true)
				.addData("scale", &Transform::Scale, true)
			.endClass()
			.deriveClass<Behaviour, GameComponent>("Behaviour")
				.addData("enabled", &Behaviour::Enabled, true)
			.endClass()
			.deriveClass<ScriptComponent, Behaviour>("ScriptComponent")
			.endClass()
			.deriveClass<CameraComponent, Behaviour>("CameraComponent")
				.addProperty("forward", &CameraComponent::GetForward)
				.addProperty("up", &CameraComponent::GetUp)
				.addProperty("right", &CameraComponent::GetRight)
				.addProperty("rotationMatrix", &CameraComponent::GetRotationMatrix)
				.addFunction("SetViewMatrix", &CameraComponent::SetViewMatrix)
			.endClass();

		getGlobalNamespace(m_pLuaState)
			.beginClass<GameTimer>("GameTimer")
				.addProperty("playingTime", &GameTimer::GetPlayingTime)
				.addProperty("totalGameTime", &GameTimer::GetTotalGameTime)
				.addProperty("elapsedTimeSeconds", &GameTimer::GetElapsedTimeInSeconds)
				.addProperty("elapsedTime", &GameTimer::GetElapsedTimeInMillis)
			.endClass();

		getGlobalNamespace(m_pLuaState)
			.beginClass<InputManager>("Input")
				.addFunction("IsPressed", &InputManager::IsPressed)
			.endClass()
			.beginNamespace("KEY")
				.addVariable("CANCEL", &CS418_KEY_CANCEL, false)
				.addVariable("BACK", &CS418_KEY_BACK, false)
				.addVariable("TAB", &CS418_KEY_TAB, false)
				.addVariable("CLEAR", &CS418_KEY_CLEAR, false)
				.addVariable("ENTER", &CS418_KEY_ENTER, false)
				.addVariable("SHIFT", &CS418_KEY_SHIFT, false)
				.addVariable("CONTROL", &CS418_KEY_CONTROL, false)
				.addVariable("ALT", &CS418_KEY_ALT, false)
				.addVariable("PAUSE", &CS418_KEY_PAUSE, false)
				.addVariable("CAPS", &CS418_KEY_CAPS, false)
				.addVariable("ESCAPE", &CS418_KEY_ESCAPE, false)
				.addVariable("SPACE", &CS418_KEY_SPACE, false)
				.addVariable("PAGEUP", &CS418_KEY_PAGEUP, false)
				.addVariable("PAGEDOWN", &CS418_KEY_PAGEDOWN, false)
				.addVariable("END", &CS418_KEY_END, false)
				.addVariable("HOME", &CS418_KEY_HOME, false)
				.addVariable("LEFT", &CS418_KEY_LEFT, false)
				.addVariable("UP", &CS418_KEY_UP, false)
				.addVariable("RIGHT", &CS418_KEY_RIGHT, false)
				.addVariable("DOWN", &CS418_KEY_DOWN, false)
				.addVariable("SELECT", &CS418_KEY_SELECT, false)
				.addVariable("PRINT", &CS418_KEY_PRINT, false)
				.addVariable("EXECUTE", &CS418_KEY_EXECUTE, false)
				.addVariable("PRTSCN", &CS418_KEY_PRTSCN, false)
				.addVariable("INSERT", &CS418_KEY_INSERT, false)
				.addVariable("DELETE", &CS418_KEY_DELETE, false)
				.addVariable("HELP", &CS418_KEY_HELP, false)
				.addVariable("0", &CS418_KEY_0, false)
				.addVariable("1", &CS418_KEY_1, false)
				.addVariable("2", &CS418_KEY_2, false)
				.addVariable("3", &CS418_KEY_3, false)
				.addVariable("4", &CS418_KEY_4, false)
				.addVariable("5", &CS418_KEY_5, false)
				.addVariable("6", &CS418_KEY_6, false)
				.addVariable("7", &CS418_KEY_7, false)
				.addVariable("8", &CS418_KEY_8, false)
				.addVariable("9", &CS418_KEY_9, false)
				.addVariable("A", &CS418_KEY_A, false)
				.addVariable("B", &CS418_KEY_B, false)
				.addVariable("C", &CS418_KEY_C, false)
				.addVariable("D", &CS418_KEY_D, false)
				.addVariable("E", &CS418_KEY_E, false)
				.addVariable("F", &CS418_KEY_F, false)
				.addVariable("G", &CS418_KEY_G, false)
				.addVariable("H", &CS418_KEY_H, false)
				.addVariable("I", &CS418_KEY_I, false)
				.addVariable("J", &CS418_KEY_J, false)
				.addVariable("K", &CS418_KEY_K, false)
				.addVariable("L", &CS418_KEY_L, false)
				.addVariable("M", &CS418_KEY_M, false)
				.addVariable("N", &CS418_KEY_N, false)
				.addVariable("O", &CS418_KEY_O, false)
				.addVariable("P", &CS418_KEY_P, false)
				.addVariable("Q", &CS418_KEY_Q, false)
				.addVariable("R", &CS418_KEY_R, false)
				.addVariable("S", &CS418_KEY_S, false)
				.addVariable("T", &CS418_KEY_T, false)
				.addVariable("U", &CS418_KEY_U, false)
				.addVariable("V", &CS418_KEY_V, false)
				.addVariable("W", &CS418_KEY_W, false)
				.addVariable("X", &CS418_KEY_X, false)
				.addVariable("Y", &CS418_KEY_Y, false)
				.addVariable("Z", &CS418_KEY_Z, false)
				.addVariable("LWIN", &CS418_KEY_LWIN, false)
				.addVariable("RWIN", &CS418_KEY_RWIN, false)
				.addVariable("APPS", &CS418_KEY_APPS, false)
				.addVariable("SLEEP", &CS418_KEY_SLEEP, false)
				.addVariable("NUMPAD0", &CS418_KEY_NUMPAD0, false)
				.addVariable("NUMPAD1", &CS418_KEY_NUMPAD1, false)
				.addVariable("NUMPAD2", &CS418_KEY_NUMPAD2, false)
				.addVariable("NUMPAD3", &CS418_KEY_NUMPAD3, false)
				.addVariable("NUMPAD4", &CS418_KEY_NUMPAD4, false)
				.addVariable("NUMPAD5", &CS418_KEY_NUMPAD5, false)
				.addVariable("NUMPAD6", &CS418_KEY_NUMPAD6, false)
				.addVariable("NUMPAD7", &CS418_KEY_NUMPAD7, false)
				.addVariable("NUMPAD8", &CS418_KEY_NUMPAD8, false)
				.addVariable("NUMPAD9", &CS418_KEY_NUMPAD9, false)
				.addVariable("MULTIPLY", &CS418_KEY_MULTIPLY, false)
				.addVariable("ADD", &CS418_KEY_ADD, false)
				.addVariable("SEPARATOR", &CS418_KEY_SEPARATOR, false)
				.addVariable("SUBRACT", &CS418_KEY_SUBTRACT, false)
				.addVariable("DECIMAL", &CS418_KEY_DECIMAL, false)
				.addVariable("DIVIDE", &CS418_KEY_DIVIDE, false)
				.addVariable("F1", &CS418_KEY_F1, false)
				.addVariable("F2", &CS418_KEY_F2, false)
				.addVariable("F3", &CS418_KEY_F3, false)
				.addVariable("F4", &CS418_KEY_F4, false)
				.addVariable("F5", &CS418_KEY_F5, false)
				.addVariable("F6", &CS418_KEY_F6, false)
				.addVariable("F7", &CS418_KEY_F7, false)
				.addVariable("F8", &CS418_KEY_F8, false)
				.addVariable("F9", &CS418_KEY_F9, false)
				.addVariable("F10", &CS418_KEY_F10, false)
				.addVariable("F11", &CS418_KEY_F11, false)
				.addVariable("F12", &CS418_KEY_F12, false)
				.addVariable("F13", &CS418_KEY_F13, false)
				.addVariable("F14", &CS418_KEY_F14, false)
				.addVariable("F15", &CS418_KEY_F15, false)
				.addVariable("F16", &CS418_KEY_F16, false)
				.addVariable("F17", &CS418_KEY_F17, false)
				.addVariable("F18", &CS418_KEY_F18, false)
				.addVariable("F19", &CS418_KEY_F19, false)
				.addVariable("F20", &CS418_KEY_F20, false)
				.addVariable("F21", &CS418_KEY_F21, false)
				.addVariable("F22", &CS418_KEY_F22, false)
				.addVariable("F23", &CS418_KEY_F23, false)
				.addVariable("F24", &CS418_KEY_F24, false)
				.addVariable("NUMLOCK", &CS418_KEY_NUMLOCK, false)
				.addVariable("SCROLLLOCK", &CS418_KEY_SCROLLLOCK, false)
				.addVariable("LSHIFT", &CS418_KEY_LSHIFT, false)
				.addVariable("RSHIFT", &CS418_KEY_RSHIFT, false)
				.addVariable("LCONTROL", &CS418_KEY_LCONTROL, false)
				.addVariable("RCONTROL", &CS418_KEY_RCONTROL, false)
				.addVariable("LALT", &CS418_KEY_LALT, false)
				.addVariable("RALT", &CS418_KEY_RALT, false)
				.addVariable("PLUS", &CS418_KEY_PLUS, false)
				.addVariable("COMMA", &CS418_KEY_COMMA, false)
				.addVariable("MINUS", &CS418_KEY_MINUS, false)
				.addVariable("PERIOD", &CS418_KEY_PERIOD, false)
			.endNamespace();
	}
}